name: ci

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - image: shiori.link.api
          - image: shiori.link.frontend

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./packages/${{ matrix.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
#
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Deploy to server via SSH
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.SERVER_HOST }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          key: ${{ secrets.SERVER_KEY }}
#          script: |
#            cd shiori.link
#            ${{ secrets.SERVER_SCRIPT }}
#            CI=true sudo docker compose down
#            CI=true sudo docker compose build --no-cache
#            CI=true sudo docker image prune -a -f
#            CI=true sudo docker compose up -d --force-recreate
